Ch2_P2-1
Insertion sort on small arrays in merge sort. Consider a modification to merge sort in which n/k sublists of length k are sorted using insertion sort and then merged using the standard merging mechanism, where k is a value to be determined.
a. Show that n/k sublists, can be sorted by insertion sort in O(nk) worst-case time.
Ans:
The length of each sublist is k, so the running time of each sublist is O(k^2) by insertion-sort. Then the worse-case running time of n/k sublists is n/k*O(k^2) = O(nk).


b.Show that sublists can be merged in O(nlg(n/k)) worst-case time.
Ans:
Using divide-and conquer algorithm, the pseudocode is:
Merge-Sublists(A, n, k, p, r)
  //p, r is the multiple of k
  if r - p >= k   //it exists 2 sublists
	num = (r-p)/k   //how many sublist
	mid = p + num/2 * k
	Merge-Sublists(A, n, k, p, mid)
	Merge-Sublists(A, n, k, mid+k, r)
	Merge(A, p, r)
	
	
